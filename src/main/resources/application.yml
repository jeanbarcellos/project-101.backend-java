server:
  port: ${PORT:8081}

spring:
  application:
    name: project-101.backend-java
    description: App demo para explorar recursos do Spring

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5532}/${DB_NAME:project101_java}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:postgres}
    # initialize: true
    # maxActive: 3

  sql:
    init:
      mode: always
      continue-on-error: true
      platform: postgresql

  jpa:
    hibernate:
      ddl-auto: none # update, create-drop, none
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL9Dialect
        format-sql: false

      # javax:
      #   persistence:
      #     schema-generation:
      #       scripts:
      #         action: create
      #         create-target: create.sql
      #         create-source: metadata

app-config:
  name: ${APP_NAME:Project 101}
  description: ${APP_DESCRIPTION:Projeto backend somo para estudos.}
  version: ${APP_VERSION:1.0.0}
  url: ${APP_URL:http://localhost:8080}

  key: ${APP_KEY:ZGVtby1zZWNyZXQtZGV2LTEyMzQ1Ng==} # demo-secret-dev-123456 em base64

  jwt:
    secret: ${app-config.key}
    issuer: ${app-config.url}
    audience: ${app-config.url}
    expiration: ${APP_JWT_EXPIRATION:1440} # minutes

  authorization:
    endpoints-public: /auth/**, /api/status, /swagger/**, /swagger-ui.html, /swagger-ui/**, /v3/api-docs/**, /v3/api-docs.yaml, /actuator/**

springdoc:
  swagger-ui:
    path: /swagger
    operationsSorter: alpha
    tagsSorter: alpha
